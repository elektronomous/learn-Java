For  example, the following statement assigns 1 to y if x is greater than 0 and 
−1 to y if x is less  than or equal to 0:

    if (x > 0)
        y = 1;
    else
        y = −1;

Alternatively, as in the following example, you can use a conditional operator to achieve 
the same result.
    
        y = (x > 0) ? 1: −1;

The symbols? and: appearing together is called a conditional operator (also known as a 
ternary operator because it uses three operands. It is the only ternary operator in Java).
The  conditional operator is in a completely different style, with no explicit if in the
statement. The syntax to use the operator is as follows: 
        
        boolean-expression? expression1: expression2

For another example, the following statement displays the message “num is even” if num
is even, and otherwise displays “num is odd.”

        System.out.println((num % 2 == 0)? "num is even": "num is odd");

As you can see from these examples, the conditional operator enables you to write short 
and concise code.
Conditional expressions can be embedded. For example, the following code assigns 1, 0, 
or −1 to status if n1 > n1, n1 == n2, or n1 < n2:
    
        status = n1 > n2? 1: (n1 == n2? 0: −1);