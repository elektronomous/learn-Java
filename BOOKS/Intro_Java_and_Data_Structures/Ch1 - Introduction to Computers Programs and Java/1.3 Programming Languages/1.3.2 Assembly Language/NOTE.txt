Moreover, programs written in machine language are very difficult to read and modify. 
For this reason, assembly language was created in the early days of computing as an
alternative to machine languages. Assembly language uses a short descriptive word,
known as a mnemonic, to represent each of the machine-language instructions. For 
example, the mnemonic add typically means to add numbers, and sub means to subtract 
numbers. To add the numbers 2 and 3 and get the result, you might write an instruction
in assembly code as follows: 
        
        add 2, 3, result

However, because the computer cannot execute assembly language, another program—called
an assembler—is used to translate assembly-language programs into machine code, as 
shown in Figure 1.3.

        ( add 2, 3, result) ------> | ASSEMBLER | ------> (1101101010011010)

Writing in assembly language requires that you know how the CPU works. Assembly language
is referred to as a low-level language, because assembly language is close in nature to
machine language and is machine dependent.