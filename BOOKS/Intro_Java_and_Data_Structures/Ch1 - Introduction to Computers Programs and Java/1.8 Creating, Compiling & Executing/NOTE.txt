You save a Java program in a .java file and compile it into a .class file.
The .class file is executed by the Java Virtual Machine (JVM).

The source file must end with the extension .java and must have the same exact
name as the public class name. For example, the file for the source code in Listing 1.1
should be named Welcome.java, since the public class name is Welcome.

A Java compiler translates a Java source file into a Java bytecode file. The following command
compiles Welcome.java:

        javac Welcome.java
    
If there aren’t any syntax errors, the compiler generates a bytecode file with a .class
extension. Thus, the preceding command generates a file named Welcome.class.

The Java language is a high-level language, but Java bytecode is a low-level language.
The bytecode is similar to machine instructions but is architecture neutral and can run
on any platform that has a Java Virtual Machine (JVM),

To execute a Java program is to run the program’s bytecode. You can execute the bytecode
on any platform with a JVM, which is an interpreter:

        java Welcome

In JDK 11, you can use java ClassName.java to compile and run a single-file source code 
program. This command combines compiling and running in one command. A single-file source
code program contains only one class in the file. This is the case for all of our programs
in the first eight chapters.

When executing a Java program, the JVM first loads the bytecode of the class to memory using
a program called the class loader. If your program uses other classes, the class loader 
dynamically loads them just before they are needed. After a class is loaded, the JVM uses a 
program called the bytecode verifier to check the validity of the bytecode and to ensure that
the bytecode does not violate Java’s security restrictions. Java enforces strict security to
make sure Java class files are not tampered with and do not harm your computer.