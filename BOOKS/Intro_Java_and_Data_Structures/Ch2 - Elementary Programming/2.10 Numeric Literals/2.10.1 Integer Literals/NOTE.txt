A literal is a constant value that appears directly in a program.
For example, 34 and 0.305 are literals in the following statements:

        int numberOfYears = 34;
        double weight = 0.305;

An integer literal can be assigned to an integer variable as long 
as it can fit into the variable. A compile error will occur if the 
literal is too large for the variable to hold. The statement byte 
        
        b = 128, 

for example, will cause a compile error, because 128 cannot be 
stored in a variable of the byte type. (Note the range for a byte
value is from â€“128 to 127.)

To denote an integer literal of the long type, append the letter L
or l to it. For example, to write integer 2147483648 in a Java program,
you have to write it as 2147483648L or 2147483648l, because 2147483648 
exceeds the range for the int value. L is preferred because l 
(lowercase L) can easily be confused with 1 (the digit one).

To denote a binary integer literal, use a leading 0b or 0B (zero B); 
to denote an octal integer literal, use a leading 0 (zero); and to 
denote a hexadecimal integer literal, use a leading 0x or 0X (zero X).
For example,

        System.out.println(0B1111); // Displays 15
        System.out.println(07777); // Displays 4095
        System.out.println(0XFFFF); // Displays 65535

Hexadecimal numbers, binary numbers, and octal numbers will be introduced in
Appendix F.

